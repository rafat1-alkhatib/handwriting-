# -*- coding: utf-8 -*-
"""Untitled1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1IBxmJl97CuxSEe9hpM3D1dosVsHBUXpT
"""

import h5py
import numpy as np
from PIL import Image
import tensorflow as tf
import matplotlib.pyplot as plt


# Load the pre-trained model from the HDF5 file
model_path = r'/content/ba_state_error.h5'
# model =tf.keras.load_model(model_path)
model = tf.keras.models.load_model(model_path)
# Load and preprocess the image
image_path = r'/content/ba_aaaaaaa.png'
image_size = (224, 224)
image = Image.open(image_path).resize(image_size)
image_array = np.array(image) / 255.0  # Normalize pixel values to [0, 1]
image_array = np.expand_dims(image_array, axis=0)  # Add batch dimension
predictions = model.predict(image_array)
predicted_class = np.argmax(predictions[0])
state = ""
if predicted_class == 0 :
  state = "isolated baa"
elif predicted_class == 1 :
  state = "first_baa"
elif  predicted_class == 2 :
  state = "mid_baa"
elif  predicted_class == 3 :
  state = "end_baa"
elif  predicted_class == 4 :
  state = "error_state"
plt.imshow(image_array[0])  # Remove batch dimension for display
plt.title(f"Predicted Class: {predicted_class} , State: {state}")
plt.axis('off')  # Hide axes
plt.show()

